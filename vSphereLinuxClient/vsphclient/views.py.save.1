from django.template import RequestContext
from django.shortcuts import render, render_to_response, redirect
from django.contrib import auth
from django.core.context_processors import csrf
import subprocess
import re


def getVMs():
    vmIds = []
    cmd = """sshpass -p "Te9GLHMQCp" ssh root@78.109.34.92 'vim-cmd vmsvc/getallvms' | awk '{print $1}'"""
    getVmIds = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
    for line in getVmIds.stdout.readlines()[1::]:
        line = line.strip()
        if line:
            vmIds.append(line.decode('cp866'))

    cmd = """sshpass -p "Te9GLHMQCp" ssh root@78.109.34.92 'vim-cmd vmsvc/getallvms' | awk '{print $2}'"""
    getVirtMachines = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
    virtMachines = getVirtMachines.stdout.readlines()[1::]

    vmStates = {}
    vmId = {}
    k = 0
    for i in vmIds:
        cmd = """sshpass -p "Te9GLHMQCp" ssh root@78.109.34.92 'vim-cmd vmsvc/power.getstate %s'""" % i
        getState = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
        state = getState.stdout.readlines()[1].decode('cp866')
        vmStates[virtMachines[k]] = state
        vmId[virtMachines[k]] = vmIds[k]
        k += 1

    return vmStates, vmId


def login(request):
    args = {}
    args.update(csrf(request)) 
    if request.POST:
        username = request.POST.get('username', '')
        password = request.POST.get('password', '')
        user = auth.authenticate(username=username, password=password)
        if user is not None:
            auth.login(request, user)
            return redirect('/vsphclient/index/', context_instance=RequestContext(request))
        else:
            args['login_error'] = "Invalid username or password."
            return render_to_response('login.html', args,  context_instance=RequestContext(request))
    else:
        return render_to_response('login.html', args,  context_instance=RequestContext(request))


def logout(request):
    auth.logout(request)
    return redirect('/vsphclient/login/', context_instance=RequestContext(request))


def index(request):
    vmStates, vmIds = <--!$.post("/stopmachine/", { 'machine_id': id })
        $.ajax({
        url: '{% url stopmachine %}',
        data: {machine_id: id,
                csrfmiddlewaretoken: $("[name = csrfmiddlewaretoken]"),
        dataType: "json",
        type: "POST",
    });
        var data = { machine_id: vmid };
        var args = { type:"POST", url:"vshclient/stopmachine/", data:data, complete:done };
        $.ajax(args);-->()
    return render(request, 'index.html', {'virt_states': vmStates, 'virt_ids': vmId, 'username': auth.get_user(request).username})


def home(request):
    return render(request, 'home.html', {'username': auth.get_user(request).username})


def stopmachine(request):
    vmStates, vmId = getVMs()
    machine_id = request.POST['machine_id']
    cmd = """sshpass -p "Te9GLHMQCp" ssh root@78.109.34.92 'vim-cmd vmsvc/power.off %s'""" % machine_id
    stopMachine = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    result = stopMachine.stdout.readlines()
    return render(request, 'index.html', {'virt_states': vmStates, 'virt_ids': vmId, 'result': result, 'username': auth.get_user(request).username})
